# -*- coding: utf-8 -*-
"""
__main__.py - –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ BESS_Geometry —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

–≠—Ç–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã "–º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã" –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π
—Ä–∞–±–æ—Ç—ã —Å Python –ø–∞–∫–µ—Ç–∞–º–∏. –°–∏—Å—Ç–µ–º–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
—Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –æ–±–ª–∞—Å—Ç—è–º.

–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: –ö–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ
Python –ø—Ä–æ–µ–∫—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–∫–µ—Ç–æ–≤ –∏ –ø–æ–¥–º–æ–¥—É–ª–µ–π, –∏ –∫–∞–∫ —Å–∏—Å—Ç–µ–º–∞ –∏–º–ø–æ—Ä—Ç–∞
—Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–∞–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π.

–ö–ª—é—á–µ–≤—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- Modular Organization: –õ–æ–≥–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ –ø–∞–ø–∫–∞–º
- Package-aware Imports: –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–∫–µ—Ç–æ–≤ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
- Graceful Degradation: –†–∞–±–æ—Ç–∞ –¥–∞–∂–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- Comprehensive Diagnostics: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
import traceback
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
current_dir = Path(__file__).parent
if str(current_dir) not in sys.path:
    sys.path.insert(0, str(current_dir))

def check_modular_structure():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
    
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã "architectural awareness" - —Å–∏—Å—Ç–µ–º–∞
    –ø–æ–Ω–∏–º–∞–µ—Ç —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –º–æ–∂–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π
    –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –µ–≥–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–π —Ä–æ–ª–∏.
    
    Returns:
        tuple: (structure_valid: bool, structure_info: dict)
    """
    print("üèóÔ∏è –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
    
    structure_info = {
        'project_root': str(current_dir),
        'expected_modules': {},
        'optional_modules': {},
        'architecture_type': 'unknown',
        'issues': [],
        'recommendations': []
    }
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–æ–¥—É–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    expected_structure = {
        'core': {
            'description': '–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã',
            'files': {
                '__init__.py': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è core –ø–∞–∫–µ—Ç–∞',
                'file_manager.py': '–ú–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤ BESS',
                'spatial_processor.py': '–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)',
            },
            'required': True
        },
        'ui': {
            'description': '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞', 
            'files': {
                '__init__.py': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –ø–∞–∫–µ—Ç–∞'
            },
            'required': False
        },
        'controllers': {
            'description': '–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            'files': {
                '__init__.py': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è controllers –ø–∞–∫–µ—Ç–∞'
            },
            'required': False
        },
        'widgets': {
            'description': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∏–¥–∂–µ—Ç—ã',
            'files': {
                '__init__.py': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è widgets –ø–∞–∫–µ—Ç–∞'
            },
            'required': False
        }
    }
    
    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    root_files = {
        'main_app.py': '–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        '__init__.py': '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞',
        'performance.py': '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)',
        'state.py': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)',
        'geometry_utils.py': '–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —É—Ç–∏–ª–∏—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)'
    }
    
    print("üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–∫–µ—Ç–æ–≤:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –ø–∞–∫–µ—Ç
    available_packages = 0
    total_packages = len(expected_structure)
    
    for package_name, package_info in expected_structure.items():
        package_path = current_dir / package_name
        
        if package_path.exists() and package_path.is_dir():
            print(f"  ‚úÖ –ü–∞–∫–µ—Ç {package_name}/ ({package_info['description']})")
            structure_info['expected_modules'][package_name] = {'available': True, 'files': {}}
            available_packages += 1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –≤–Ω—É—Ç—Ä–∏ –ø–∞–∫–µ—Ç–∞
            for file_name, file_desc in package_info['files'].items():
                file_path = package_path / file_name
                if file_path.exists():
                    structure_info['expected_modules'][package_name]['files'][file_name] = True
                    print(f"    ‚úÖ {file_name} ({file_desc})")
                else:
                    structure_info['expected_modules'][package_name]['files'][file_name] = False
                    if package_info['required']:
                        structure_info['issues'].append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {package_name}/{file_name}")
                    else:
                        print(f"    ‚ö†Ô∏è {file_name} ({file_desc}) - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        else:
            if package_info['required']:
                print(f"  ‚ùå –ü–∞–∫–µ—Ç {package_name}/ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç—Å—è)")
                structure_info['expected_modules'][package_name] = {'available': False}
                structure_info['issues'].append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç {package_name}/")
            else:
                print(f"  ‚ö†Ô∏è –ü–∞–∫–µ—Ç {package_name}/ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
                structure_info['expected_modules'][package_name] = {'available': False}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:")
    for file_name, file_desc in root_files.items():
        file_path = current_dir / file_name
        if file_path.exists():
            structure_info['optional_modules'][file_name] = True
            print(f"  ‚úÖ {file_name} ({file_desc})")
        else:
            structure_info['optional_modules'][file_name] = False
            if file_name in ['main_app.py', '__init__.py']:
                structure_info['issues'].append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–π —Ñ–∞–π–ª {file_name}")
                print(f"  ‚ùå {file_name} ({file_desc}) - –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–µ–Ω")
            else:
                print(f"  ‚ö†Ô∏è {file_name} ({file_desc}) - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    if available_packages >= 2:
        structure_info['architecture_type'] = 'modular'
        print(f"\nüèõÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ú–æ–¥—É–ª—å–Ω–∞—è ({available_packages}/{total_packages} –ø–∞–∫–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ)")
    elif available_packages == 1:
        structure_info['architecture_type'] = 'partial_modular'
        print(f"\nüèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ß–∞—Å—Ç–∏—á–Ω–æ –º–æ–¥—É–ª—å–Ω–∞—è ({available_packages}/{total_packages} –ø–∞–∫–µ—Ç–æ–≤)")
    else:
        structure_info['architecture_type'] = 'flat'
        print("\nüìÅ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –ü–ª–æ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (legacy)")
    
    # –û—Ü–µ–Ω–∫–∞ –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    critical_issues = len([issue for issue in structure_info['issues'] 
                          if '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–π' in issue or '–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç' in issue])
    
    if critical_issues == 0:
        structure_valid = True
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        structure_valid = False
        print(f"‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {critical_issues} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
    
    return structure_valid, structure_info

def check_system_requirements():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    
    –≠—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã "architecture-aware diagnostics" -
    —Å–∏—Å—Ç–µ–º–∞ –ø–æ–Ω–∏–º–∞–µ—Ç —Å–≤–æ—é –º–æ–¥—É–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö
    –º–µ—Å—Ç–∞—Ö, –∞ –Ω–µ –∏—â–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ.
    
    Returns:
        tuple: (is_ready: bool, status_info: dict)
    """
    print("üîç –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
    
    status_info = {
        'python_version': sys.version_info,
        'current_directory': str(current_dir),
        'timestamp': datetime.now().isoformat(),
        'components': {},
        'issues': [],
        'recommendations': [],
        'architecture_info': {}
    }
    
    # –≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    print("\nüìã –≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    if sys.version_info < (3, 7):
        status_info['issues'].append("–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –Ω–æ–≤–µ–µ")
        status_info['recommendations'].append("–û–±–Ω–æ–≤–∏—Ç–µ Python –¥–æ –≤–µ—Ä—Å–∏–∏ 3.7+")
        return False, status_info
    else:
        print(f"  ‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ tkinter –¥–ª—è GUI
    try:
        import tkinter
        status_info['components']['tkinter'] = True
        print("  ‚úÖ GUI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (tkinter) –¥–æ—Å—Ç—É–ø–Ω–∞")
    except ImportError:
        status_info['components']['tkinter'] = False
        status_info['issues'].append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç tkinter –¥–ª—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
        status_info['recommendations'].append("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ tkinter: apt-get install python3-tk (Linux) –∏–ª–∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å tkinter")
        return False, status_info
    
    # –≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞  
    print("\nüèóÔ∏è –≠—Ç–∞–ø 2: –ê–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
    structure_valid, structure_info = check_modular_structure()
    status_info['architecture_info'] = structure_info
    
    if not structure_valid:
        status_info['issues'].extend(structure_info['issues'])
        status_info['recommendations'].append("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞")
        return False, status_info
    
    # –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
    print("\nüîó –≠—Ç–∞–ø 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º core –º–æ–¥—É–ª–∏ (—Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ)
    core_modules_status = {}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º file_manager –∏–∑ –ø–∞–∫–µ—Ç–∞ core
    try:
        from core.file_manager import FileManager
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        fm = FileManager()
        core_modules_status['core.file_manager'] = True
        print("  ‚úÖ core.file_manager - FileManager —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        core_modules_status['core.file_manager'] = False
        status_info['issues'].append(f"–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å core.file_manager: {e}")
        print(f"  ‚ùå core.file_manager - –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        core_modules_status['core.file_manager'] = False
        status_info['issues'].append(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ FileManager: {e}")
        print(f"  ‚ö†Ô∏è core.file_manager - –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω, –Ω–æ –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        from main_app import ModernBessApp
        core_modules_status['main_app'] = True
        print("  ‚úÖ main_app - ModernBessApp –¥–æ—Å—Ç—É–ø–µ–Ω")
    except ImportError as e:
        core_modules_status['main_app'] = False
        status_info['issues'].append(f"–ù–µ —É–¥–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ModernBessApp: {e}")
        print(f"  ‚ùå main_app - –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
    optional_modules_status = {}
    
    optional_modules = [
        ('geometry_utils', '–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —É—Ç–∏–ª–∏—Ç—ã'),
        ('performance', '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'), 
        ('state', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º')
    ]
    
    for module_name, description in optional_modules:
        try:
            __import__(module_name)
            optional_modules_status[module_name] = True
            print(f"  ‚úÖ {module_name} - {description}")
        except ImportError:
            optional_modules_status[module_name] = False
            print(f"  ‚ö†Ô∏è {module_name} - {description} (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
    
    status_info['components'].update(core_modules_status)
    status_info['components'].update(optional_modules_status)
    
    # –≠—Ç–∞–ø 4: –û—Ü–µ–Ω–∫–∞ –æ–±—â–µ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
    print("\nüéØ –≠—Ç–∞–ø 4: –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã")
    
    # –ü–æ–¥—Å—á–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    critical_components = ['core.file_manager', 'main_app']
    available_critical = sum(1 for comp in critical_components if status_info['components'].get(comp, False))
    
    # –ü–æ–¥—Å—á–µ—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    available_optional = sum(1 for status in optional_modules_status.values() if status)
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    if available_critical == len(critical_components):
        if available_optional >= len(optional_modules) * 0.8:  # 80% –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            functionality_level = "–ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
            system_ready = True
        elif available_optional >= len(optional_modules) * 0.5:  # 50% –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            functionality_level = "–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
            system_ready = True
        else:
            functionality_level = "–ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
            system_ready = True
    else:
        functionality_level = "–ù–µ–ø–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
        system_ready = False
        status_info['issues'].append("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
    
    status_info['functionality_level'] = functionality_level
    print(f"  üéØ –£—Ä–æ–≤–µ–Ω—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {functionality_level}")
    print(f"  üìä –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {available_critical}/{len(critical_components)}")
    print(f"  üìä –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {available_optional}/{len(optional_modules)}")
    
    if system_ready:
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("\n‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É")
        print("\nüö® –û–ë–ù–ê–†–£–ñ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        for issue in status_info['issues']:
            print(f"  ‚Ä¢ {issue}")
        
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        recommendations = status_info['recommendations'] + [
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª core/file_manager.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å FileManager",
            "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ core/__init__.py –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø–∞–∫–µ—Ç–∞",
            "–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
        ]
        for recommendation in recommendations:
            print(f"  ‚Ä¢ {recommendation}")
    
    return system_ready, status_info

def create_application():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã "adaptive architecture" - —Å–∏—Å—Ç–µ–º–∞
    –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –∫ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–∞–∏–ª—É—á—à—É—é –≤–æ–∑–º–æ–∂–Ω—É—é
    –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    
    Returns:
        ModernBessApp –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    try:
        print("üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from main_app import ModernBessApp
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app = ModernBessApp()
        print("  ‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        print("  ‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        if app.initialize():
            print("  ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
            return app
        else:
            print("  ‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
            print("  üí° –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
            return app
            
    except ImportError as e:
        print(f"  ‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {e}")
        print("  üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ main_app.py")
        return None
        
    except Exception as e:
        print(f"  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        print("  üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        return None

def run_application(app):
    """
    –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    Args:
        app: –≠–∫–∑–µ–º–ø–ª—è—Ä ModernBessApp –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        
    Returns:
        bool: True –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    """
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        print("üí° –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        success = app.run()
        
        if success:
            print("\n" + "=" * 60)
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("\n" + "=" * 60)
            print("‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥-—Ñ–∞–π–ª—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        
        return success
        
    except KeyboardInterrupt:
        print("\n" + "=" * 60)
        print("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (Ctrl+C)")
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return True
        
    except Exception as e:
        print("\n" + "=" * 60)
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        print("üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞")
        print("  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("  ‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫")
        return False

def show_startup_banner():
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    """
    banner = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                          BESS_GEOMETRY v2.0                                 ‚ïë
‚ïë                   Building Energy Spatial System                            ‚ïë
‚ïë                                                                              ‚ïë
‚ïë  üèóÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∑–¥–∞–Ω–∏–π –¥–ª—è —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞          ‚ïë
‚ïë  üèõÔ∏è –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤                        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """
    print(banner)
    print(f"üìÖ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    print()

def show_error_help():
    """
    –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
    """
    help_text = """
üÜò –°–ü–†–ê–í–ö–ê –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú

–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:

üîß –û–°–ù–û–í–ù–´–ï –ü–†–û–í–ï–†–ö–ò:
  1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Python –≤–µ—Ä—Å–∏–∏ 3.7 –∏–ª–∏ –Ω–æ–≤–µ–µ
  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
  3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤

üìÅ –û–ñ–ò–î–ê–ï–ú–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:
  ‚Ä¢ core/file_manager.py (–º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤)
  ‚Ä¢ core/__init__.py (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è core –ø–∞–∫–µ—Ç–∞)
  ‚Ä¢ main_app.py (–æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
  ‚Ä¢ __init__.py (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞)

üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:
  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –≤ —Ñ–∞–π–ª–æ–≤–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–µ
  ‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ core/file_manager.py —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å FileManager
  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º

üí° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ï–°–£–†–°–´:
  ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ Python
  ‚Ä¢ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –±–æ–ª—å—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
  ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–∫–µ—Ç–æ–≤

üìß –ü–û–î–î–ï–†–ñ–ö–ê:
  –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
  —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Ç–µ–∫—Å—Ç–µ –æ—à–∏–±–∫–∏.
    """
    print(help_text)

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
    
    Returns:
        int: –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞ (0 - —É—Å–ø–µ—Ö, 1 - –æ—à–∏–±–∫–∞)
    """
    try:
        # –≠—Ç–∞–ø 1: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–Ω–Ω–µ—Ä
        show_startup_banner()
        
        # –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã (—Å —É—á–µ—Ç–æ–º –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã)
        print("üîç –≠—Ç–∞–ø 1: –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        is_ready, status_info = check_system_requirements()
        
        if not is_ready:
            show_error_help()
            return 1
        
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ ({status_info['functionality_level']})")
        print()
        
        # –≠—Ç–∞–ø 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("üèóÔ∏è –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        app = create_application()
        
        if app is None:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            show_error_help()
            return 1
        
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É")
        print()
        
        # –≠—Ç–∞–ø 4: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("üöÄ –≠—Ç–∞–ø 3: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        success = run_application(app)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        return 0 if success else 1
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        print("\nüìã –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:")
        traceback.print_exc()
        show_error_help()
        return 1

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
def handle_special_commands():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command in ['--help', '-h']:
            print("BESS_Geometry - –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∑–¥–∞–Ω–∏–π")
            print("\n–ö–æ–º–∞–Ω–¥—ã:")
            print("  python __main__.py          - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            print("  python __main__.py --check  - –¢–æ–ª—å–∫–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
            print("  python __main__.py --help   - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
            return True
            
        elif command == '--check':
            show_startup_banner()
            is_ready, status_info = check_system_requirements()
            print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–ì–æ—Ç–æ–≤' if is_ready else '–ù–µ –≥–æ—Ç–æ–≤'}")
            return True
    
    return False

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == '__main__':
    if not handle_special_commands():
        exit_code = main()
        sys.exit(exit_code)