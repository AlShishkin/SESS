# -*- coding: utf-8 -*-
"""
app.py - Legacy/Fallback –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ BESS_Geometry

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å–ª—É–∂–∏—Ç "—Å—Ç—Ä–∞—Ö–æ–≤–æ—á–Ω–æ–π —Å–µ—Ç–∫–æ–π"
–∫–æ–≥–¥–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ö–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–∂–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø
–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏: "–≤—Å–µ–≥–¥–∞ –∏–º–µ–π—Ç–µ –ø–ª–∞–Ω B".

–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å: –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
—Å–æ–∑–¥–∞—é—Ç—Å—è —Å–∏—Å—Ç–µ–º—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏. –î–∞–∂–µ –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–∞—è
—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Ä–∞–±–æ—Ç–∞—é—â—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.

–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
- –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python)
- –ü—Ä–æ—Å—Ç–∞—è, –ø–æ–Ω—è—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–¥–∞
- –ß–µ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
- Graceful degradation (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π)
"""

import tkinter as tk
from tkinter import ttk, filedialog, messagebox, scrolledtext
import json
import os
from pathlib import Path
from datetime import datetime
import traceback

class App:
    """
    Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ BESS_Geometry (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    
    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π "–º–∏–Ω–∏–º–∞–ª—å–Ω–æ –∂–∏–∑–Ω–µ—Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç" (MVP)
    –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ BESS. –û–Ω –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω–æ–µ
    –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–∞–∂–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏.
    
    –§–∏–ª–æ—Å–æ—Ñ–∏—è –¥–∏–∑–∞–π–Ω–∞: "–õ—É—á—à–µ –ø—Ä–æ—Å—Ç–æ–µ —Ä–∞–±–æ—Ç–∞—é—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ, —á–µ–º —Å–ª–æ–∂–Ω–æ–µ –Ω–µ—Ä–∞–±–æ—á–µ–µ"
    """
    
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏, –∑–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π
        –ø–æ–¥—Ö–æ–¥ - —Å–æ–∑–¥–∞–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç trade-off –º–µ–∂–¥—É –ø—Ä–æ—Å—Ç–æ—Ç–æ–π –∏ –≥–∏–±–∫–æ—Å—Ç—å—é.
        """
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è BESS_Geometry")
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.root = tk.Tk()
        self.root.title("BESS_Geometry (Legacy Mode)")
        self.root.geometry("1000x700")
        self.root.minsize(600, 400)
        
        # –ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.current_file = None
        self.file_data = None
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self._create_interface()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
        self.root.protocol("WM_DELETE_WINDOW", self._on_closing)
        
        print("‚úÖ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ")
    
    def _create_interface(self):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—Ü–∏–ø "functional sufficiency" - —Å–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å,
        –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–µ–∑ –∏–∑–ª–∏—à–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
        –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–º–µ–µ—Ç —á–µ—Ç–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ.
        """
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é (–±–∞–∑–æ–≤–æ–µ, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ)
        self._create_menu()
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ —Ä–µ–∂–∏–º–µ
        self._create_warning_panel()
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—á—É—é –æ–±–ª–∞—Å—Ç—å
        self._create_main_area()
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self._create_status_bar()
    
    def _create_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        menubar = tk.Menu(self.root)
        self.root.config(menu=menubar)
        
        # –ú–µ–Ω—é "–§–∞–π–ª" - —Ç–æ–ª—å–∫–æ —Å–∞–º–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ
        file_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–§–∞–π–ª", menu=file_menu)
        file_menu.add_command(label="–û—Ç–∫—Ä—ã—Ç—å JSON...", command=self._open_file)
        file_menu.add_separator()
        file_menu.add_command(label="–í—ã—Ö–æ–¥", command=self._on_closing)
        
        # –ú–µ–Ω—é "–°–ø—Ä–∞–≤–∫–∞"
        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–°–ø—Ä–∞–≤–∫–∞", menu=help_menu)
        help_menu.add_command(label="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self._show_about)
        help_menu.add_command(label="–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Legacy —Ä–µ–∂–∏–º–∞", command=self._show_limitations)
    
    def _create_warning_panel(self):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã
        
        –≠—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–∞–∂–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø UX –¥–∏–∑–∞–π–Ω–∞: –≤—Å–µ–≥–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å,
        –≤ –∫–∞–∫–æ–º —Ä–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∫–∞–∫–∏–µ —É –Ω–µ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è.
        """
        warning_frame = tk.Frame(self.root, bg='#fff3cd', relief=tk.RAISED, bd=1)
        warning_frame.pack(fill=tk.X, padx=5, pady=2)
        
        warning_label = tk.Label(
            warning_frame,
            text="‚ö†Ô∏è LEGACY –†–ï–ñ–ò–ú: –†–∞–±–æ—Ç–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é",
            bg='#fff3cd',
            fg='#856404',
            font=('Arial', 9, 'bold'),
            pady=5
        )
        warning_label.pack()
        
        detail_label = tk.Label(
            warning_frame,
            text="–î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä JSON —Ñ–∞–π–ª–æ–≤. –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã.",
            bg='#fff3cd',
            fg='#856404',
            font=('Arial', 8),
            pady=2
        )
        detail_label.pack()
    
    def _create_main_area(self):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏
        
        –í legacy —Ä–µ–∂–∏–º–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
        —Ç–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤.
        –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø "form follows function" - —Ñ–æ—Ä–º–∞ —Å–ª–µ–¥—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏.
        """
        # –°–æ–∑–¥–∞–µ–º notebook –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        
        # –í–∫–ª–∞–¥–∫–∞ "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞"
        self.content_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.content_frame, text="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞")
        
        # –¢–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.content_text = scrolledtext.ScrolledText(
            self.content_frame,
            wrap=tk.WORD,
            font=('Consolas', 10),
            state=tk.DISABLED,
            bg='#f8f9fa'
        )
        self.content_text.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        
        # –í–∫–ª–∞–¥–∫–∞ "–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
        self.analysis_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.analysis_frame, text="–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
        
        self.analysis_text = scrolledtext.ScrolledText(
            self.analysis_frame,
            wrap=tk.WORD,
            font=('Consolas', 10),
            state=tk.DISABLED,
            bg='#f0f8ff'
        )
        self.analysis_text.pack(fill=tk.BOTH, expand=True, padx=5, pady=5)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self._show_welcome_message()
    
    def _create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        self.status_bar = tk.Label(
            self.root,
            text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ - –æ—Ç–∫—Ä–æ–π—Ç–µ JSON —Ñ–∞–π–ª",
            relief=tk.SUNKEN,
            anchor=tk.W,
            padx=10,
            pady=3,
            bg='#f0f0f0'
        )
        self.status_bar.pack(side=tk.BOTTOM, fill=tk.X)
    
    def _show_welcome_message(self):
        """
        –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        
        –•–æ—Ä–æ—à–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ "–≥–æ–≤–æ—Ä–∏—Ç" —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –æ–±—ä—è—Å–Ω—è—è,
        —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏ —á—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ
        –≤ legacy —Ä–µ–∂–∏–º–µ, –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞.
        """
        welcome_text = """
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                 BESS_GEOMETRY - LEGACY –†–ï–ñ–ò–ú                ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é BESS_Geometry!

üéØ –ß–¢–û –ú–û–ñ–ù–û –î–ï–õ–ê–¢–¨ –í LEGACY –†–ï–ñ–ò–ú–ï:
‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞—Ç—å –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å JSON —Ñ–∞–π–ª—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ BESS
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º (–ø–æ–º–µ—â–µ–Ω–∏—è, –æ—Ç–≤–µ—Ä—Å—Ç–∏—è)
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ Revit

üìã –ö–ê–ö –ù–ê–ß–ê–¢–¨ –†–ê–ë–û–¢–£:
1. –ù–∞–∂–º–∏—Ç–µ "–§–∞–π–ª" ‚Üí "–û—Ç–∫—Ä—ã—Ç—å JSON..."
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞ BESS –∏–∑ Revit (—Ñ–æ—Ä–º–∞—Ç .json)
3. –ò–∑—É—á–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ –≤–∫–ª–∞–¥–∫–∞—Ö

‚ö†Ô∏è  –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø LEGACY –†–ï–ñ–ò–ú–ê:
‚Ä¢ –ù–µ—Ç –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤
‚Ä¢ –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
‚Ä¢ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö

üí° –î–õ–Ø –ü–û–õ–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã BESS_Geometry –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º –∏ –ø–æ–ª–Ω—ã–º
–Ω–∞–±–æ—Ä–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞.

–û—Ç–∫—Ä–æ–π—Ç–µ JSON —Ñ–∞–π–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã!
        """
        
        self.content_text.config(state=tk.NORMAL)
        self.content_text.insert(tk.END, welcome_text)
        self.content_text.config(state=tk.DISABLED)
    
    def _open_file(self):
        """
        –û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON —Ñ–∞–π–ª–∞
        
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø "robust input handling" - –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
        –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ–± –æ—à–∏–±–∫–∞—Ö.
        """
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
            filepath = filedialog.askopenfilename(
                title="–û—Ç–∫—Ä—ã—Ç—å JSON —Ñ–∞–π–ª BESS",
                defaultextension=".json",
                filetypes=[
                    ("JSON files", "*.json"),
                    ("BESS Export", "*.json"),
                    ("All files", "*.*")
                ],
                initialdir=os.path.expanduser("~/Desktop")
            )
            
            if not filepath:
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            self.status_bar.config(text="–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞...")
            self.root.update()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–∞—Ä—Å–∏–º JSON
            with open(filepath, 'r', encoding='utf-8') as f:
                self.file_data = json.load(f)
            
            self.current_file = filepath
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            filename = os.path.basename(filepath)
            self.root.title(f"BESS_Geometry (Legacy) - {filename}")
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            self._display_file_content()
            self._analyze_file_structure()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            self.status_bar.config(text=f"–ó–∞–≥—Ä—É–∂–µ–Ω: {filename}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            messagebox.showinfo(
                "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω",
                f"JSON —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:\n{filename}\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö."
            )
            
        except json.JSONDecodeError as e:
            # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ JSON
            error_msg = f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ JSON:\n{str(e)}\n\n–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç."
            messagebox.showerror("–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞", error_msg)
            self.status_bar.config(text="–û—à–∏–±–∫–∞: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON")
            
        except FileNotFoundError:
            # –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            messagebox.showerror("–û—à–∏–±–∫–∞", "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
            self.status_bar.config(text="–û—à–∏–±–∫–∞: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        except PermissionError:
            # –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞.")
            self.status_bar.config(text="–û—à–∏–±–∫–∞: –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞")
            
        except Exception as e:
            # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏
            error_msg = f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:\n{str(e)}"
            messagebox.showerror("–û—à–∏–±–∫–∞", error_msg)
            self.status_bar.config(text="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
            print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
    
    def _display_file_content(self):
        """
        –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ–Ω—è—Ç–Ω–æ–º
        –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∏–¥–µ. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å
        –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π –≤–∞–∂–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤.
        """
        if not self.file_data:
            return
        
        self.content_text.config(state=tk.NORMAL)
        self.content_text.delete(1.0, tk.END)
        
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            content_lines = []
            content_lines.append("–°–û–î–ï–†–ñ–ò–ú–û–ï JSON –§–ê–ô–õ–ê BESS")
            content_lines.append("=" * 60)
            content_lines.append("")
            
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            version = self.file_data.get('version', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')
            content_lines.append(f"–í–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞: {version}")
            content_lines.append("")
            
            # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
            meta = self.file_data.get('meta', {})
            if meta:
                content_lines.append("üìã –ú–ï–¢–ê–î–ê–ù–ù–´–ï –ü–†–û–ï–ö–¢–ê:")
                content_lines.append(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {meta.get('doc_title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                content_lines.append(f"   –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {meta.get('doc_full_path', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
                content_lines.append(f"   –í—Ä–µ–º—è —ç–∫—Å–ø–æ—Ä—Ç–∞: {meta.get('export_time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                content_lines.append(f"   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {meta.get('doc_dir', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
                content_lines.append("")
            
            # –£—Ä–æ–≤–Ω–∏
            levels = self.file_data.get('levels', [])
            if levels:
                content_lines.append(f"üè¢ –£–†–û–í–ù–ò ({len(levels)}):")
                for level in levels:
                    name = level.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                    elevation_ft = level.get('elevation_ft', 0)
                    elevation_m = level.get('elevation_m', 0)
                    content_lines.append(f"   ‚Ä¢ {name}: {elevation_m:.2f} –º ({elevation_ft:.2f} —Ñ—Ç)")
                content_lines.append("")
            
            # –ü–æ–º–µ—â–µ–Ω–∏—è
            rooms = self.file_data.get('rooms', [])
            if rooms:
                content_lines.append(f"üè† –ü–û–ú–ï–©–ï–ù–ò–Ø ({len(rooms)}):")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –ø–æ–º–µ—â–µ–Ω–∏–π
                for i, room in enumerate(rooms[:20]):
                    name = room.get('name', f'–ü–æ–º–µ—â–µ–Ω–∏–µ {i+1}')
                    level = room.get('params', {}).get('BESS_level', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    area = room.get('area_m2', 0)
                    content_lines.append(f"   ‚Ä¢ {name} (–£—Ä–æ–≤–µ–Ω—å: {level}) - {area:.1f} –º¬≤")
                
                if len(rooms) > 20:
                    content_lines.append(f"   ... –∏ –µ—â–µ {len(rooms) - 20} –ø–æ–º–µ—â–µ–Ω–∏–π")
                content_lines.append("")
            
            # –û—Ç–≤–µ—Ä—Å—Ç–∏—è
            openings = self.file_data.get('openings', [])
            if openings:
                content_lines.append(f"üö™ –û–¢–í–ï–†–°–¢–ò–Ø ({len(openings)}):")
                
                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
                types_count = {}
                for opening in openings:
                    opening_type = opening.get('category', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    types_count[opening_type] = types_count.get(opening_type, 0) + 1
                
                for opening_type, count in sorted(types_count.items()):
                    content_lines.append(f"   ‚Ä¢ {opening_type}: {count}")
                
                content_lines.append("")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—Ç–≤–µ—Ä—Å—Ç–∏–π
                content_lines.append("   –ü—Ä–∏–º–µ—Ä—ã:")
                for i, opening in enumerate(openings[:10]):
                    name = opening.get('name', f'–û—Ç–≤–µ—Ä—Å—Ç–∏–µ {i+1}')
                    opening_type = opening.get('category', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    level = opening.get('level', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    content_lines.append(f"     - {name} ({opening_type}, {level})")
                
                if len(openings) > 10:
                    content_lines.append(f"     ... –∏ –µ—â–µ {len(openings) - 10} –æ—Ç–≤–µ—Ä—Å—Ç–∏–π")
                content_lines.append("")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            areas = self.file_data.get('areas', [])
            if areas:
                content_lines.append(f"üìê –û–ë–õ–ê–°–¢–ò: {len(areas)}")
                content_lines.append("")
            
            content_lines.append("üí° –ü–û–î–°–ö–ê–ó–ö–ê:")
            content_lines.append("   –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è")
            content_lines.append("   –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ.")
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç
            self.content_text.insert(tk.END, "\n".join(content_lines))
            
        except Exception as e:
            error_text = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:\n{str(e)}\n\n–°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ JSON:\n\n"
            error_text += json.dumps(self.file_data, indent=2, ensure_ascii=False)
            self.content_text.insert(tk.END, error_text)
        
        self.content_text.config(state=tk.DISABLED)
    
    def _analyze_file_structure(self):
        """
        –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø "progressive disclosure" - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º
        –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π
        –∞–Ω–∞–ª–∏–∑ –¥–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.
        """
        if not self.file_data:
            return
        
        self.analysis_text.config(state=tk.NORMAL)
        self.analysis_text.delete(1.0, tk.END)
        
        try:
            analysis_lines = []
            analysis_lines.append("–¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –§–ê–ô–õ–ê")
            analysis_lines.append("=" * 60)
            analysis_lines.append(f"–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            analysis_lines.append("")
            
            # –û–±—â–∏–π –∞–Ω–∞–ª–∏–∑ JSON —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            analysis_lines.append("üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            analysis_lines.append(f"   –†–∞–∑–º–µ—Ä JSON: {len(json.dumps(self.file_data))} —Å–∏–º–≤–æ–ª–æ–≤")
            analysis_lines.append(f"   –ö–æ—Ä–Ω–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(self.file_data)}")
            analysis_lines.append(f"   –ö–ª—é—á–∏ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è: {list(self.file_data.keys())}")
            analysis_lines.append("")
            
            # –ê–Ω–∞–ª–∏–∑ –≤–µ—Ä—Å–∏–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            version = self.file_data.get('version', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')
            analysis_lines.append("üîñ –í–ï–†–°–ò–Ø –ò –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨:")
            analysis_lines.append(f"   –í–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞: {version}")
            
            if version.startswith('bess-export'):
                analysis_lines.append("   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç BESS —ç–∫—Å–ø–æ—Ä—Ç–∞")
                if version == 'bess-export-3.0':
                    analysis_lines.append("   ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞")
                else:
                    analysis_lines.append("   ‚ö†Ô∏è –£—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è —Ñ–æ—Ä–º–∞—Ç–∞")
            else:
                analysis_lines.append("   ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
            analysis_lines.append("")
            
            # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
            sections_info = [
                ('meta', '–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞'),
                ('levels', '–£—Ä–æ–≤–Ω–∏ –∑–¥–∞–Ω–∏—è'),
                ('rooms', '–ü–æ–º–µ—â–µ–Ω–∏—è'),
                ('openings', '–û—Ç–≤–µ—Ä—Å—Ç–∏—è'),
                ('areas', '–û–±–ª–∞—Å—Ç–∏')
            ]
            
            for section_key, section_name in sections_info:
                section_data = self.file_data.get(section_key)
                analysis_lines.append(f"üìÅ {section_name.upper()} ('{section_key}'):")
                
                if section_data is None:
                    analysis_lines.append("   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                elif isinstance(section_data, list):
                    analysis_lines.append(f"   üìä –¢–∏–ø: –ú–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(section_data)}")
                    if section_data:
                        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                        first_item = section_data[0]
                        if isinstance(first_item, dict):
                            keys = list(first_item.keys())
                            analysis_lines.append(f"   üîë –ü–æ–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞: {keys[:10]}{'...' if len(keys) > 10 else ''}")
                elif isinstance(section_data, dict):
                    analysis_lines.append(f"   üìä –¢–∏–ø: –û–±—ä–µ–∫—Ç, –∫–ª—é—á–µ–π: {len(section_data)}")
                    keys = list(section_data.keys())
                    analysis_lines.append(f"   üîë –ö–ª—é—á–∏: {keys[:10]}{'...' if len(keys) > 10 else ''}")
                else:
                    analysis_lines.append(f"   üìä –¢–∏–ø: {type(section_data).__name__}")
                
                analysis_lines.append("")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
            analysis_lines.append("üîç –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò:")
            
            integrity_issues = []
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            required_fields = ['version', 'meta']
            for field in required_fields:
                if field not in self.file_data:
                    integrity_issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: {field}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–º–µ—â–µ–Ω–∏–π
            rooms = self.file_data.get('rooms', [])
            if rooms:
                rooms_without_geometry = 0
                for room in rooms:
                    if 'outer_xy_m' not in room:
                        rooms_without_geometry += 1
                
                if rooms_without_geometry > 0:
                    integrity_issues.append(f"–ü–æ–º–µ—â–µ–Ω–∏–π –±–µ–∑ –≥–µ–æ–º–µ—Ç—Ä–∏–∏: {rooms_without_geometry}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            openings = self.file_data.get('openings', [])
            if openings and rooms:
                room_names = {room.get('name', '') for room in rooms}
                orphaned_openings = 0
                
                for opening in openings:
                    from_room = opening.get('from_room', '')
                    to_room = opening.get('to_room', '')
                    if from_room and from_room not in room_names:
                        orphaned_openings += 1
                    if to_room and to_room not in room_names:
                        orphaned_openings += 1
                
                if orphaned_openings > 0:
                    integrity_issues.append(f"–û—Ç–≤–µ—Ä—Å—Ç–∏–π —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏: {orphaned_openings}")
            
            if integrity_issues:
                analysis_lines.append("   ‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
                for issue in integrity_issues:
                    analysis_lines.append(f"     ‚Ä¢ {issue}")
            else:
                analysis_lines.append("   ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
            
            analysis_lines.append("")
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
            analysis_lines.append("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
            
            if version != 'bess-export-3.0':
                analysis_lines.append("   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω BESS –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏")
            
            if integrity_issues:
                analysis_lines.append("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª Revit –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å")
                analysis_lines.append("   ‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º")
            
            total_elements = len(rooms) + len(openings) + len(self.file_data.get('areas', []))
            if total_elements > 1000:
                analysis_lines.append("   ‚Ä¢ –ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º –¥–∞–Ω–Ω—ã—Ö - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
                analysis_lines.append("     –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ BESS_Geometry –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            
            analysis_lines.append("   ‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–Ω–∞–ª–∏–∑
            self.analysis_text.insert(tk.END, "\n".join(analysis_lines))
            
        except Exception as e:
            error_text = f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:\n{str(e)}\n\n{traceback.format_exc()}"
            self.analysis_text.insert(tk.END, error_text)
        
        self.analysis_text.config(state=tk.DISABLED)
    
    def _show_about(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        about_text = """
BESS_Geometry (Legacy Mode)
Building Energy Spatial System

–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
–≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∑–¥–∞–Ω–∏–π.

–í–µ—Ä—Å–∏—è: Legacy/Fallback
–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä

–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Legacy —Ä–µ–∂–∏–º–∞:
‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∏–µ JSON —Ñ–∞–π–ª–æ–≤ BESS
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
‚Ä¢ –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤

–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ
–≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã BESS_Geometry.

–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ
–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
—ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –∑–¥–∞–Ω–∏–π.
        """
        messagebox.showinfo("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)
    
    def _show_limitations(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö Legacy —Ä–µ–∂–∏–º–∞"""
        limitations_text = """
–û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø LEGACY –†–ï–ñ–ò–ú–ê

Legacy —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç
–Ω–∞–π—Ç–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã.

–ß–¢–û –ù–ï–î–û–°–¢–£–ü–ù–û –í LEGACY –†–ï–ñ–ò–ú–ï:

üö´ –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ:
   ‚Ä¢ –ù–µ—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–æ–≤ –∑–¥–∞–Ω–∏–π
   ‚Ä¢ –ù–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
   ‚Ä¢ –ù–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

üö´ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:
   ‚Ä¢ –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å –≥–µ–æ–º–µ—Ç—Ä–∏—é
   ‚Ä¢ –ù–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
   ‚Ä¢ –ù–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

üö´ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑:
   ‚Ä¢ –ù–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–º–µ–∂–Ω–æ—Å—Ç–∏ –ø–æ–º–µ—â–µ–Ω–∏–π
   ‚Ä¢ –ù–µ—Ç —Ä–∞—Å—á–µ—Ç–∞ –ø–ª–æ—â–∞–¥–µ–π –∏ –æ–±—ä–µ–º–æ–≤
   ‚Ä¢ –ù–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫

üö´ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö:
   ‚Ä¢ –ù–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ CONTAM
   ‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
   ‚Ä¢ –ù–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤

–ß–¢–û –ù–£–ñ–ù–û –î–õ–Ø –ü–û–õ–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:

‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–æ–¥—É–ª–∏:
   ‚Ä¢ file_manager.py
   ‚Ä¢ geometry_utils.py
   ‚Ä¢ performance.py
   ‚Ä¢ state.py
   ‚Ä¢ controllers/
   ‚Ä¢ ui/

‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –Ω–∞–ª–∏—á–∏–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ
–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞.
        """
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        limitations_window = tk.Toplevel(self.root)
        limitations_window.title("–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Legacy —Ä–µ–∂–∏–º–∞")
        limitations_window.geometry("500x600")
        limitations_window.transient(self.root)
        
        text_widget = scrolledtext.ScrolledText(
            limitations_window,
            wrap=tk.WORD,
            font=('Arial', 10),
            bg='#fff8dc'
        )
        text_widget.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        text_widget.insert(tk.END, limitations_text)
        text_widget.config(state=tk.DISABLED)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_button = tk.Button(
            limitations_window,
            text="–ü–æ–Ω—è—Ç–Ω–æ",
            command=limitations_window.destroy,
            font=('Arial', 10),
            pady=5
        )
        close_button.pack(pady=10)
    
    def _on_closing(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.destroy()
    
    def mainloop(self):
        """
        –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å–∏—Å—Ç–µ–º–æ–π –∑–∞–ø—É—Å–∫–∞,
        –∫–æ—Ç–æ—Ä–∞—è –æ–∂–∏–¥–∞–µ—Ç –º–µ—Ç–æ–¥ mainloop() –æ—Ç legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
        """
        print("üöÄ –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        
        try:
            self.root.mainloop()
            print("‚úÖ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏: {e}")
            raise

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
if __name__ == '__main__':
    """
    –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    print("üß™ –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è BESS_Geometry")
    
    try:
        app = App()
        app.mainloop()
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Legacy –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}")
        traceback.print_exc()