#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–∫–∞–∑ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ - —á—Ç–æ –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è
"""

import sys
from pathlib import Path

def show_tree(directory, prefix="", max_depth=3, current_depth=0):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤"""
    if current_depth >= max_depth:
        return
        
    items = sorted(directory.iterdir(), key=lambda x: (x.is_file(), x.name.lower()))
    
    for i, item in enumerate(items):
        is_last = i == len(items) - 1
        current_prefix = "‚îî‚îÄ‚îÄ " if is_last else "‚îú‚îÄ‚îÄ "
        print(f"{prefix}{current_prefix}{item.name}")
        
        if item.is_dir() and not item.name.startswith('.') and not item.name.startswith('__pycache__'):
            next_prefix = prefix + ("    " if is_last else "‚îÇ   ")
            show_tree(item, next_prefix, max_depth, current_depth + 1)

def find_python_files():
    """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ Python —Ñ–∞–π–ª—ã"""
    current_dir = Path.cwd()
    python_files = list(current_dir.rglob("*.py"))
    
    print(f"üêç –ù–ê–ô–î–ï–ù–û {len(python_files)} PYTHON –§–ê–ô–õ–û–í:")
    print("-" * 50)
    
    for py_file in sorted(python_files):
        rel_path = py_file.relative_to(current_dir)
        size = py_file.stat().st_size
        print(f"   üìÑ {rel_path} ({size} –±–∞–π—Ç)")

def check_specific_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã"""
    current_dir = Path.cwd()
    
    files_to_find = [
        "main_controller.py",
        "geometry_operations.py", 
        "editing_modes.py",
        "core/architectural_tools.py",
        "core/shaft_manager.py",
        "core/bess_parameters.py",
        "core/integration_manager.py",
        "ui/contour_editor.py"
    ]
    
    print(f"\nüéØ –ü–û–ò–°–ö –ö–û–ù–ö–†–ï–¢–ù–´–• –§–ê–ô–õ–û–í:")
    print("-" * 50)
    
    for target_file in files_to_find:
        file_path = current_dir / target_file
        if file_path.exists():
            size = file_path.stat().st_size
            print(f"   ‚úÖ {target_file} ({size} –±–∞–π—Ç)")
        else:
            print(f"   ‚ùå {target_file} - –ù–ï –ù–ê–ô–î–ï–ù")
            
            # –ò—â–µ–º —Ñ–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
            filename = Path(target_file).name
            found_elsewhere = list(current_dir.rglob(filename))
            if found_elsewhere:
                print(f"      üîç –ù–∞–π–¥–µ–Ω –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö:")
                for alt_location in found_elsewhere:
                    rel_path = alt_location.relative_to(current_dir)
                    print(f"         üìç {rel_path}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    current_dir = Path.cwd()
    
    print("üìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê BESS_GEOMETRY")
    print("=" * 60)
    print(f"üìç –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {current_dir}")
    print(f"üêç Python: {sys.version}")
    
    print(f"\nüå≥ –î–ï–†–ï–í–û –î–ò–†–ï–ö–¢–û–†–ò–ô:")
    print("-" * 50)
    show_tree(current_dir)
    
    find_python_files()
    check_specific_files()
    
    print(f"\nüí° –ï–°–õ–ò –§–ê–ô–õ–´ –ï–°–¢–¨, –ù–û –ù–ï –ò–ú–ü–û–†–¢–ò–†–£–Æ–¢–°–Ø:")
    print("-" * 50)
    print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ __init__.py –≤ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ")
    print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python advanced_check.py")
    print("   3. –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞:")
    print("      import sys")
    print(f"      sys.path.insert(0, r'{current_dir}')")

if __name__ == '__main__':
    main()